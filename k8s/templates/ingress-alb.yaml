---
{{- if eq .Values.ingressController "alb" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-{{ .Release.Name }}
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    {{- if eq "https" .Values.httpScheme }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    {{- if .Values.aws.certificateArn }}
    alb.ingress.kubernetes.io/certificate-arn: "{{ .Values.aws.certificateArn }}"
    {{- end }}
    {{- else }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    {{- end }}
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    {{- if .Values.aws.annotations }}
    {{- range $key, $value := .Values.aws.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
    {{- end }}
spec:
  ingressClassName: "alb"
{{- if and (eq "https" .Values.httpScheme) (not .Values.aws.certificateArn) }}
  tls:
    - hosts:
      - {{ .Values.cloudbeaverBaseDomain }}
      secretName: {{ .Release.Name }}-ingress-tls
{{- end }}
  rules:
  - host: "{{ .Values.cloudbeaverBaseDomain }}"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: cloudbeaver
              port:
                number: 8978        
{{ end }} 